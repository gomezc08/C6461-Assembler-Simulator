; R0 - Index for storing input values
; R1 - Current input value
; R2 - Target value
; R3 - Smallest difference found so far
; R4 - Closest number found
; R5 - Temporary register for differences

                         LOC    6                		; Start at lower address
000006     000024        Data   20               		; Number of values to read
000007     000000        Data   0                		; Start of numbers storage (20 words)
000010     000000        Data   0                     
000011     000000        Data   0                     
000012     000000        Data   0                     
000013     000000        Data   0                     
000014     000000        Data   0                     
000015     000000        Data   0                     
000016     000000        Data   0                     
000017     000000        Data   0                     
000020     000000        Data   0                     
000021     000000        Data   0                     
000022     000000        Data   0                     
000023     000000        Data   0                     
000024     000000        Data   0                     
000025     000000        Data   0                     
000026     000000        Data   0                     
000027     000000        Data   0                     
000030     000000        Data   0                     
000031     000000        Data   0                     
000032     000000        Data   0                     
; Define constants and counters
000033     000024        Data   20               		; Number of values to read
000034     000000        Data   0                		; Target number to compare against

; Main program - Start at lower address
000035     002033        LDR    0,0,COUNT        		; Load counter (20) into R0
000036     006406        LDA    1,0,6            		; Load base address of data (6) into R1 for offset

; Read numbers loop at a low address
000037     147400        IN     3,0              		; Read user input into R3
000040     005500        STR    3,1,0            		; Store input at address [R1]
000041     014401        AIR    1,1              		; Increment R1 to next memory address
000042     016001        SIR    0,1              		; Decrement R0 (counter)
000043     026037        JNE    0,0,RDLOOP       		; If R0 != 0, loop back to RDLOOP (should fit in 5 bits now)
000044     000000        HLT                     		; Stop
